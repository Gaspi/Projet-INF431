package drafts;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class PreprocessingFiles {

	static void prepare(String fileForReading, String fileForWritting){
		Path readFile = Paths.get(fileForReading);
		Path writeFile = Paths.get(fileForWritting);
		
		if(!Files.exists(writeFile))
			try {
				writeFile = Files.createFile(writeFile);
			} catch (IOException e) {
				e.printStackTrace();
			}
		
		
		Charset charset = Charset.forName("US-ASCII");	
		try {
		    BufferedReader reader = Files.newBufferedReader(readFile, charset);
		    BufferedWriter writer = Files.newBufferedWriter(writeFile, charset);
		    String line = null;

		    while ((line = reader.readLine()) != null ) {
		        line = line.toLowerCase();
		        line = line.replaceAll("[^a-z ]|(?<=^)[ ]+", "");
		        line = line += "\n";
		        writer.write(line);		        
		    }
		    
		} catch (IOException e1) {
			e1.printStackTrace();
		} 
	}
	
	
	public static void main(String[] args) {
		
	    hashFunction l = new LookUp3();
		Charset charset = Charset.forName("US-ASCII");

	    long start = System.nanoTime();
		try {
			Path file = Paths.get("pg1002.txt");
		    BufferedReader reader = Files.newBufferedReader(file, charset);
		 
		    String line = null;
		    String[] strings = null;

		    while ((line = reader.readLine()) != null ){
		        strings = line.split("[\\s]+");
		        for(String g: strings)
		        	l.hashString(g);    
		    }		
		} catch (IOException e1) {
			e1.printStackTrace();
		}
		System.out.println(((float)(System.nanoTime() - start))/1000000000.);
	}

}
